Head(HeadData { definitions: {"downward_s_curve": Path(PathData { arguments: Vector([Variable("t"), Variable("speed"), Variable("offset")]), definitions: {"y": Expr(Binary(Mul, Variable("t"), Variable("speed"))), "x": Expr(Binary(Add, Expr(Binary(Mul, Int(50), Expr(Unary(FunctionCall("sin"), Variable("t"))))), Variable("offset")))} }), "mid_sized": Bullet(BulletData { definitions: {"hitbox": Vector([Int(4), Int(4)]), "color": Vector([Int(255), Int(255), Int(0)]), "sprite": String("gameasset"), "shape": String("rectangle")} }), "phase1": Pattern(PatternData { block: Block { definitions: {"actions": Block(Block { definitions: {"origin": Expr(Binary(Add, Variable("entity_position"), Vector([Int(0), Int(20)])))}, statements: [For(ForData { initial_definitions: {"n": Range(0, 5)}, condition: None, body: Block { definitions: {"angle": Expr(Unary(FunctionCall("towards_player"), None))}, statements: [Spawn(SpawnData { definitions: {"speed": Int(200), "type": Variable("mid_sized"), "direction": Expr(Binary(Add, Variable("angle"), Expr(Binary(Mul, Variable("n"), Int(20))))), "position": Variable("origin")} }), Wait(Frames(Int(4)))] } }), Wait(Time(Float(0.5))), For(ForData { initial_definitions: {"j": Range(0, 3), "i": Range(0, 3)}, condition: Unless(Expr(Binary(And, Expr(Binary(Test, Variable("i"), Int(1))), Expr(Binary(Test, Variable("j"), Int(1)))))), body: Block { definitions: {"x": Int(1)}, statements: [Spawn(SpawnData { definitions: {"type": Variable("mid_sized"), "position_fn": Expr(Unary(FunctionCall("downward_s_curve"), Vector([Variable("t"), Int(200), Expr(Binary(Add, Variable("entity_position"), Vector([Expr(Binary(Mul, Expr(Binary(Sub, Variable("i"), Int(1))), Int(80))), Expr(Binary(Mul, Expr(Binary(Sub, Variable("j"), Int(1))), Int(80)))])))])))} })] } }), Wait(Time(Float(0.5)))] }), "iteration_type": Variable("time"), "length": Duration(Time(Float(6.0)))}, statements: [] } }), "p2": Pattern(PatternData { block: Block { definitions: {"actions": Block(Block { definitions: {}, statements: [Spawn(SpawnData { definitions: {} })] })}, statements: [] } })} })
